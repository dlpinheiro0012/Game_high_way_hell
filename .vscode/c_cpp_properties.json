{
    "configurations": [
        {
            // Nome da configuração para Windows.
            "name": "Win32",

            // O caminho mais importante: onde o IntelliSense deve procurar por arquivos de cabeçalho.
            "includePath": [
                // "${workspaceFolder}" é uma variável do VS Code que aponta para a raiz do seu projeto.
                // "/**" significa "inclua esta pasta e todas as suas subpastas".
                "${workspaceFolder}/**",
                // Adicionamos o caminho específico da Raylib para garantir que ele encontre o raylib.h.
                "${workspaceFolder}/raylib/include"
            ],

            // Macros de pré-processador que podem ser definidas. Geralmente não precisa mexer aqui.
            "defines": [
                "_DEBUG",
                "UNICODE",
                "_UNICODE"
            ],

            // O caminho para o compilador. O IntelliSense o usa para entender as particularidades do GCC.
            // Deixando apenas "gcc.exe", ele vai procurar no PATH do sistema, o que o torna portátil.
            "compilerPath": "gcc.exe",
            
            // Define qual padrão da linguagem C o IntelliSense deve seguir.
            "cStandard": "c11",

            // Ajuda o IntelliSense a prover sugestões mais precisas para o seu ambiente (GCC no Windows 64-bit).
            "intelliSenseMode": "windows-gcc-x64"
        },
        {
            // Nome da configuração para Linux. O VS Code escolhe a correta automaticamente.
            "name": "Linux",
            "includePath": [
                "${workspaceFolder}/**",
                "${workspaceFolder}/raylib/include"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/gcc", // Caminho padrão para o GCC no Linux.
            "cStandard": "c11",
            "intelliSenseMode": "linux-gcc-x64"
        }
    ],
    // Versão do esquema de configuração.
    "version": 4
}